Процедура ЗагрузитьКурсы(Пары=Неопределено) Экспорт 
	//Период = ТекущаяДата();
	Если Пары = Неопределено Тогда
		Пары = Новый Массив;
		Пары.Добавить("ETHUSDT");
		Пары.Добавить("ETHBTC");
	КонецЕсли;
	Параметры = Новый Структура("symbol,limit",Пары[0],1);
	РезультатЗапроса = ВзаимодействиеСBinance.ВыполнитьЗапросAPI("trades",Параметры);
	Если Не РезультатЗапроса.Ошибка Тогда
		Ответ = РезультатЗапроса.Ответ;		
		
		ОтветJSONСтрока = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(ОтветJSONСтрока);
		ДанныеUSD = ПрочитатьJSON(ЧтениеJSON,Ложь)[0];
		ЧтениеJSON.Закрыть();	
		КурсUSD = ДанныеUSD.price;
		Период = ОбщегоНазначения.ПолучитьДатуИзTimestamp(Цел(ДанныеUSD.time/1000));
		//КурсBTC = КлючИЗначение.Значение.btc;
		НаборЗаписейКурса = РегистрыСведений.КурсыКриптоВалют.СоздатьНаборЗаписей();
		
		НаборЗаписейКурса.Отбор.Период.Установить(Период);
		ЗаписьКурса = НаборЗаписейКурса.Добавить();
		ЗаписьКурса.Период = Период;
		ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
		ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.UnitedStatesDollar;
		ЗаписьКурса.Курс = КурсUSD;
		
		//ЗаписьКурса = НаборЗаписейКурса.Добавить();
		//ЗаписьКурса.Период = Период;
		//ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
		//ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.Bitcoin;
		//ЗаписьКурса.Курс = КурсBTC;
		
		НаборЗаписейКурса.Записать();
	КонецЕсли;
	
	Параметры = Новый Структура("symbol,limit",Пары[1],1);
	РезультатЗапроса = ВзаимодействиеСBinance.ВыполнитьЗапросAPI("trades",Параметры);
	Если Не РезультатЗапроса.Ошибка Тогда
		Ответ = РезультатЗапроса.Ответ;		
		
		ОтветJSONСтрока = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(ОтветJSONСтрока);
		ДанныеBTC = ПрочитатьJSON(ЧтениеJSON,Ложь)[0];
		ЧтениеJSON.Закрыть();	
		//КурсUSD = КлючИЗначение.Значение;
		КурсBTC = ДанныеBTC.price;
		Период = ОбщегоНазначения.ПолучитьДатуИзTimestamp(Цел(ДанныеBTC.time/1000));
		НаборЗаписейКурса = РегистрыСведений.КурсыКриптоВалют.СоздатьНаборЗаписей();
		
		НаборЗаписейКурса.Отбор.Период.Установить(Период);
		ЗаписьКурса = НаборЗаписейКурса.Добавить();
		ЗаписьКурса.Период = Период;
		ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
		ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.Bitcoin;
		ЗаписьКурса.Курс = КурсBTC;
		
		//ЗаписьКурса = НаборЗаписейКурса.Добавить();
		//ЗаписьКурса.Период = Период;
		//ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
		//ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.Bitcoin;
		//ЗаписьКурса.Курс = КурсBTC;
		
		НаборЗаписейКурса.Записать();
	КонецЕсли;
КонецПроцедуры

Функция ВыполнитьЗапросAPI(Запрос,Параметры=Неопределено,Подключение=Неопределено) Экспорт
	//Параметры: Структура ИмяПараметра -> Значение
	Ошибка = Ложь;
	ТекстЗапроса = "/api/v3/" + Запрос;
	МассивПараметров = Новый Массив;                                               
	
	Если Не Параметры = Неопределено Тогда
		Для Каждого КлючИЗначение Из Параметры Цикл
			МассивПараметров.Добавить("" + КлючИЗначение.Ключ + "=" + ?(ТипЗнч(КлючИЗначение.Значение)=Тип("Число"),Формат(КлючИЗначение.Значение,"ЧГ="),КлючИЗначение.Значение));                                      
		КонецЦикла;
	КонецЕсли;
	
	СтрокаПараметров = "";
	Для Каждого СтрокаПараметра Из МассивПараметров Цикл
		Если СтрокаПараметров <> "" Тогда
			СтрокаПараметров = СтрокаПараметров + "&";
		КонецЕсли;
		СтрокаПараметров = СтрокаПараметров + СтрокаПараметра;
	КонецЦикла;
	
	Если СтрокаПараметров <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "?" + СтрокаПараметров;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Ответ = Неопределено;
	Если Подключение = Неопределено Тогда
		Подключение = Новый HTTPСоединение(Константы.АдресAPIBinance.Получить(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	КонецЕсли;
	Попытка
		Ответ = Подключение.Получить(Запрос);
	Исключение
		Ответ = "Ошибка выполнения";
		Ошибка = Истина;
	КонецПопытки;

	Возврат Новый Структура("Подключение,Ответ,Ошибка",Подключение,Ответ,Ошибка);
КонецФункции
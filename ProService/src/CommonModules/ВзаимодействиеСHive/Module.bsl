Функция ВыполнитьЗапросAPI(Запрос,Параметры=Неопределено,Подключение=Неопределено,ТипЗапроса="GET",ТокенДоступа="") Экспорт
	//Параметры: Структура ИмяПараметра -> Значение
	Ошибка = Ложь;
	ТекстЗапроса = "/api/v2/" + Запрос;
	МассивПараметров = Новый Массив;                                               
	
	СтрокаПараметров = "";
	
	Если ТипЗапроса = "GET" Тогда
		Если Не Параметры = Неопределено Тогда
			Для Каждого КлючИЗначение Из Параметры Цикл
				МассивПараметров.Добавить("" + КлючИЗначение.Ключ + "=" + ?(ТипЗнч(КлючИЗначение.Значение)=Тип("Число"),Формат(КлючИЗначение.Значение,"ЧГ="),КлючИЗначение.Значение));                                      
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого СтрокаПараметра Из МассивПараметров Цикл
			Если СтрокаПараметров <> "" Тогда
				СтрокаПараметров = СтрокаПараметров + "&";
			КонецЕсли;
			СтрокаПараметров = СтрокаПараметров + СтрокаПараметра;
		КонецЦикла;
		
		Если СтрокаПараметров <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + "?" + СтрокаПараметров;
		КонецЕсли;
	ИначеЕсли ТипЗапроса = "POST" Тогда
		СтрокаПараметров = ОбщегоНазначения.ПолучитьОбъектJSONСтрокой(Параметры);
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Ответ = Неопределено;    
	Подключение = Подключение(Подключение);
	Попытка
		Если ТипЗапроса = "GET" Тогда
			Запрос.Заголовки.Вставить("Content-Type","application/json");
			Если ЗначениеЗаполнено(ТокенДоступа) Тогда
				Запрос.Заголовки.Вставить("Authorization","Bearer " + ТокенДоступа);
			КонецЕсли;
			Ответ = Подключение.Получить(Запрос)
		ИначеЕсли ТипЗапроса = "POST" Тогда
			Запрос.УстановитьТелоИзСтроки(СтрокаПараметров);
			Запрос.Заголовки.Вставить("Content-Type","application/json");
			Ответ = Подключение.ОтправитьДляОбработки(Запрос);
		КонецЕсли;
	Исключение
		Ответ = "Ошибка выполнения";
		Ошибка = Истина;
	КонецПопытки;

	Возврат Новый Структура("Подключение,Ответ,Ошибка",Подключение,Ответ,Ошибка);
КонецФункции

Функция ВыполнитьАутентификацию(Логин,Пароль,TwoFA=Неопределено,Подключение=Неопределено) Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("login",Логин);
	Параметры.Вставить("password",Пароль);
	Параметры.Вставить("remember",Истина);
	Если TwoFA = Неопределено Тогда
		РезультатВыполнения = ВыполнитьЗапросAPI("auth/login",Параметры,Подключение);
	Иначе
		Параметры.Вставить("twofa_code",TwoFA);
		РезультатВыполнения = ВыполнитьЗапросAPI("auth/login",Параметры,Подключение,"POST");
	КонецЕсли;
КонецФункции
	
Функция СтандартноеПодключение()
	Возврат Новый HTTPСоединение(Константы.АдресAPIHive.Получить(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
КонецФункции

Функция Подключение(Подключение=Неопределено)
	Если Подключение=Неопределено Тогда
		Подключение = СтандартноеПодключение();
	КонецЕсли;
	Возврат Подключение;
КонецФункции

Функция ПолучитьСписокФерм(ТокенДоступа) Экспорт
	РезультатВыполнения = ВыполнитьЗапросAPI("farms",,,,ТокенДоступа);
	Если РезультатВыполнения.Ответ.КодСостояния = 200 Тогда
		Возврат ОбщегоНазначения.ПолучитьСтруктурированныеДанныеJSON(РезультатВыполнения.Ответ.ПолучитьТелоКакСтроку());
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьДанныеХэшрэйта(ТокенДоступа) Экспорт
	РезультатВыполнения = ПолучитьСписокФерм(ТокенДоступа);
	Если Не РезультатВыполнения = Неопределено Тогда
		Данные = РезультатВыполнения.data[0];
		
		ИДФермы = Данные.id;
		ИмяФермы = Данные.name;
		
		Период = ТекущаяДата();
		НаборЗаписейХэшрейта = РегистрыСведений.ХэшрейтОборудования.СоздатьНаборЗаписей();
		НаборЗаписейХэшрейта.Отбор.Период.Установить(Период);
		НаборЗаписейХэшрейта.Отбор.ФермаID.Установить(ИДФермы);
		
		Для Каждого Монета Из Данные.hashrates_by_coin Цикл
			Хэшрэйт = Монета.hashrate;
			Валюта = Справочники.Валюты.СоздатьПолучитьВалюту(Монета.coin);
			
			ЗаписьХэшрейта = НаборЗаписейХэшрейта.Добавить();
			ЗаписьХэшрейта.Период = Период;
			ЗаписьХэшрейта.Валюта = Валюта;
			ЗаписьХэшрейта.ФермаID = ИДФермы;
			ЗаписьХэшрейта.Хэшрэйт = Хэшрэйт;
			ЗаписьХэшрейта.ИмяФермы = ИмяФермы;
		
		КонецЦикла;
		
		НаборЗаписейХэшрейта.Записать();
	КонецЕсли;
КонецФункции
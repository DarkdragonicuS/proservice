Функция ВыполнитьЗапросAPI(Метод,Параметры=Неопределено,Подключение=Неопределено,ТипЗапроса="GET",ТокенДоступа="") Экспорт
	//Параметры: Структура ИмяПараметра -> Значение
	Ошибка = Ложь;
	ТекстЗапроса = "/main/api/v2/" + Метод;
	МассивПараметров = Новый Массив;                                               
	
	СтрокаПараметров = "";
		Если Не Параметры = Неопределено Тогда
			Для Каждого КлючИЗначение Из Параметры Цикл
				МассивПараметров.Добавить("" + КлючИЗначение.Ключ + "=" + ?(ТипЗнч(КлючИЗначение.Значение)=Тип("Число"),Формат(КлючИЗначение.Значение,"ЧГ="),КлючИЗначение.Значение));                                      
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого СтрокаПараметра Из МассивПараметров Цикл
			Если СтрокаПараметров <> "" Тогда
				СтрокаПараметров = СтрокаПараметров + "&";
			КонецЕсли;
			СтрокаПараметров = СтрокаПараметров + СтрокаПараметра;
		КонецЦикла;
		
		
		
	Если ТипЗапроса = "GET" Тогда
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("APIKey",Константы.ТокенNiceHashAPI.Получить());
		ПараметрыЗапроса.Вставить("XTime",ОбщегоНазначения.ПолучитьTimestampИзДаты(ТекущаяДата()));
		ПараметрыЗапроса.Вставить("XNonce",Новый УникальныйИдентификатор());
		//ПараметрыЗапроса.Вставить("EmptyField1",Символ(0));
		ПараметрыЗапроса.Вставить("XOrganizationId",Константы.NiceHashOrganizationId.Получить());
		//ПараметрыЗапроса.Вставить("EmptyField2",Символ(0));
		ПараметрыЗапроса.Вставить("RequestMethod","GET");
		ПараметрыЗапроса.Вставить("RequestPath",ТекстЗапроса);
		ПараметрыЗапроса.Вставить("RequestQuery",СтрокаПараметров);
		Запрос = Новый HTTPЗапрос(ТекстЗапроса);
		Если СтрокаПараметров <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + "?" + СтрокаПараметров;
		КонецЕсли;
		УстановитьЗаголовкиЗапроса(Запрос,ПараметрыЗапроса);
		
		
		
		
		
		
		
		
		
		
		
	ИначеЕсли ТипЗапроса = "POST" Тогда
		СтрокаПараметров = ОбщегоНазначения.ПолучитьОбъектJSONСтрокой(Параметры);
		Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	КонецЕсли;
	
	
	Ответ = Неопределено;    
	Подключение = Подключение(Подключение);
	Попытка
		Если ТипЗапроса = "GET" Тогда
			//Запрос.Заголовки.Вставить("Content-Type","application/json");
			//Если ЗначениеЗаполнено(ТокенДоступа) Тогда
			//	Запрос.Заголовки.Вставить("Authorization","Bearer " + ТокенДоступа);
			//КонецЕсли;
			Ответ = Подключение.Получить(Запрос)
		ИначеЕсли ТипЗапроса = "POST" Тогда
			Запрос.УстановитьТелоИзСтроки(СтрокаПараметров);
			Запрос.Заголовки.Вставить("Content-Type","application/json");
			Ответ = Подключение.ОтправитьДляОбработки(Запрос);
		КонецЕсли;
	Исключение
		Ответ = "Ошибка выполнения";
		Ошибка = Истина;
	КонецПопытки;

	Возврат Новый Структура("Подключение,Ответ,Ошибка",Подключение,Ответ,Ошибка);
КонецФункции

Процедура ЗагрузитьСтатистикуМайнера(Кошелек=Неопределено) Экспорт
	Если Кошелек = Неопределено Тогда
		Кошелек = Константы.ОсновнойКошелек.Получить();
	КонецЕсли; 
	
	Запрос = "accounting/accounts2";
	РезультатЗапроса = ВыполнитьЗапросAPI(Запрос);
	Если Не РезультатЗапроса.Ошибка Тогда
		Ответ = РезультатЗапроса.Ответ;		
		
		ОтветJSONСтрока = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(ОтветJSONСтрока);
		Данные = ПрочитатьJSON(ЧтениеJSON,Ложь).data;
		ЧтениеJSON.Закрыть();
		
		Период = ОбщегоНазначения.ПолучитьДатуИзTimestamp(Данные.time);
		
		Для Каждого КлючИЗначение Из Данные Цикл
			Если КлючИЗначение.Ключ = "unpaid" Тогда
				НевыплаченныеСредства = КлючИЗначение.Значение * Pow(10,-18); //Перевод Wei в ETH
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписейНачислений = РегистрыСведений.Начисления.СоздатьНаборЗаписей(); 
		НаборЗаписейНачислений.Отбор.Timestamp.Установить(Период);
		ЗаписьНачисления = НаборЗаписейНачислений.Добавить();
		ЗаписьНачисления.Период = ТекущаяДата();
		ЗаписьНачисления.Timestamp = Период;
		ЗаписьНачисления.Сумма = НевыплаченныеСредства;
		НаборЗаписейНачислений.Записать();
	КонецЕсли;
КонецПроцедуры

Функция СтандартноеПодключение()
	Возврат Новый HTTPСоединение(Константы.АдресAPINiceHash.Получить(), 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
КонецФункции

Функция Подключение(Подключение=Неопределено)
	Если Подключение=Неопределено Тогда
		Подключение = СтандартноеПодключение();
	КонецЕсли;            
	Возврат Подключение;
КонецФункции

Функция ПолучитьXAuth(Токен,Данные)
	Возврат Токен+":"+ПодписатьДанные(Данные);
КонецФункции

//Данные - структура (параметры):
//URL
//HTTP Method
//API Key
//X-Organization-ID
//X-Nonce
Функция ПолучитьСтрокуКПодписанию(Данные)
	СтрокаКПодписанию = "";
	//Для Каждого КлючИЗначение Из Данные Цикл
	//	Если СтрокаКПодписанию <> "" Тогда
	//		СтрокаКПодписанию = СтрокаКПодписанию + Символ(0);
	//	КонецЕсли;
	//	СтрокаКПодписанию = СтрокаКПодписанию + КлючИЗначение.Значение;
	//КонецЦикла;
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.APIKey + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Формат(Данные.XTime,"ЧГ=") + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.XNonce + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Символ(0) + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.XOrganizationId + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Символ(0) + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.RequestMethod + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.RequestPath + Символ(0);
	СтрокаКПодписанию = СтрокаКПодписанию + Данные.RequestQuery;
	Пока Прав(СтрокаКПодписанию,1)= Символ(0) Цикл
		СтрокаКПодписанию = Лев(СтрокаКПодписанию,СтрДлина(СтрокаКПодписанию)-1);
	КонецЦикла;
	Возврат СтрокаКПодписанию;
КонецФункции

Функция ПодписатьДанные(Данные,Секрет=Неопределено)
	Если Секрет=Неопределено Тогда
		Секрет = Константы.СекретNiceHashAPI.Получить();
	КонецЕсли;
	
	СтрокаКПодписанию = ПолучитьСтрокуКПодписанию(Данные);
	
	Возврат КриптоФункции.HMAC(Секрет,ПолучитьДвоичныеДанныеИзСтроки(СтрокаКПодписанию),"SHA256");
КонецФункции

//Параметры:
//API Key
//X-Time request header value
//X-Nonce request header value
//Empty field
//X-Organization-Id request header value
//Empty field
//Request method (example: GET, POST, DELETE, PUT, be careful to use upper case)
//Request path (example: /main/api/v2/hashpower/orderBook)
//Request query string (example: algorithm=X16R&page=0&size=100, The query string should be the same as passed to the server - without the leading question mark)
//Additionally, if REST endpoint requires a body it has to be included in input as an extra field prefixed by a delimiter:
//Request body (example: {"test":true} )
Функция УстановитьЗаголовкиЗапроса(Запрос,Параметры)
	Запрос.Заголовки.Вставить("X-Time",Формат(Параметры.XTime,"ЧГ="));
	Запрос.Заголовки.Вставить("X-Nonce",Параметры.XNonce);
	Запрос.Заголовки.Вставить("X-Organization-Id",Параметры.XOrganizationId);
	Запрос.Заголовки.Вставить("X-Request-Id",Параметры.XNonce);
	//Запрос.Заголовки.Вставить("X-Auth",Параметры.XAuth);
	Запрос.Заголовки.Вставить("X-Auth",ПолучитьXAuth(Константы.ТокенNiceHashAPI.Получить(),Параметры));
КонецФункции

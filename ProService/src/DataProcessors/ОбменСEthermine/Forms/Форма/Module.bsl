
&НаКлиенте
Процедура ЗагрузитьКурсы(Команда)
	ЗагрузитьКурсыНаСервере();
	ПостроитьГрафик();
	//Элементы.КурсыВалют.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКурсыНаСервере()
	//APIEndpoint = Константы.АдресAPIEthermine.Получить();
	//
	//Подключение = Новый HTTPСоединение(APIEndpoint,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	//
	//ТекстЗапроса = "/poolStats";
	//Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	ВзаимодействиеСEhtermine.ЗагрузитьКурсы();
	//Период = ТекущаяДата();
	//РезультатЗапроса = ВзаимодействиеСEhtermine.ВыполнитьЗапросAPI("poolStats");
	//Если Не РезультатЗапроса.Ошибка Тогда
	//	Ответ = РезультатЗапроса.Ответ;		
	//	
	//	ОтветJSONСтрока = Ответ.ПолучитьТелоКакСтроку();
	//	                                                      
	//	ЧтениеJSON = Новый ЧтениеJSON();
	//	ЧтениеJSON.УстановитьСтроку(ОтветJSONСтрока);
	//	Данные = ПрочитатьJSON(ЧтениеJSON,Ложь).data;
	//	ЧтениеJSON.Закрыть();
	//	
	//	Для Каждого КлючИЗначение Из Данные Цикл
	//		Если КлючИЗначение.Ключ = "price" Тогда
	//			КурсUSD = КлючИЗначение.Значение.usd;
	//			КурсBTC = КлючИЗначение.Значение.btc;
	//			НаборЗаписейКурса = РегистрыСведений.КурсыКриптоВалют.СоздатьНаборЗаписей();
	//			
	//			НаборЗаписейКурса.Отбор.Период.Установить(Период);
	//			ЗаписьКурса = НаборЗаписейКурса.Добавить();
	//			ЗаписьКурса.Период = Период;
	//			ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
	//			ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.UnitedStatesDollar;
	//			ЗаписьКурса.Курс = КурсUSD;
	//			
	//			ЗаписьКурса = НаборЗаписейКурса.Добавить();
	//			ЗаписьКурса.Период = Период;
	//			ЗаписьКурса.ВалютаБазовая = Справочники.Валюты.Ether;
	//			ЗаписьКурса.ВалютаКотировки = Справочники.Валюты.Bitcoin;
	//			ЗаписьКурса.Курс = КурсBTC;
	//			
	//			НаборЗаписейКурса.Записать();
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСтатистикуМайнинга(Команда)
	ЗагрузитьСтатистикуМайнингаНаСервере();
	//Элементы.ДоходностьГрафик.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСтатистикуМайнингаНаСервере()
	ЗагрузитьКурсыНаСервере();
	
	ВзаимодействиеСEhtermine.ЗагрузитьСтатистикуМайнера(Кошелек);
	
	ВзаимодействиеСHive.ЗагрузитьДанныеХэшрэйта(Константы.ТокенHiveAPI.Получить());
	
	ВзаимодействиеСEhtermine.ЗагрузитьХешрейтМайнера(Кошелек);
	//ВзаимодействиеСHive.ВыполнитьАутентификацию("DarkdragonicuS","Y$j867mxQi32",TwoFA);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойКошелек()
	Возврат Константы.ОсновнойКошелек.Получить();
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностью();
	//Для КоличествоТочек = 5 По 50 Цикл
	//	Элементы.КоличествоТочекГрафика.СписокВыбора.Добавить(КоличествоТочек);
	//КонецЦикла;
	КоличествоТочекГрафика = 24;
	Кошелек = ПолучитьОсновнойКошелек();
	Период.Вариант = ВариантСтандартногоПериода.Сегодня;
	ДатаКурса = КонецДня(Период.ДатаОкончания);
	СтатистикаПоВсемКошелькам = Истина;
	ВыплатыНеВлияютНаГрафик = Истина;
	ПодключитьОбработчикОжидания("ПостроитьГрафик",600);
	УстановитьНадписьКурсаНаПериод();
	ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура ПостроитьГрафик()	Экспорт
	Если Не ОтображатьДоходностьБезУчетаИзмененияКурса Тогда
		ДатаКурса = КонецДня(Период.ДатаОкончания);
	КонецЕсли;
	ПостроитьГрафикКурсов();
	ПостроитьГрафикДоходности();
	УстановитьНадписьКурсаНаПериод();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ДатаКурса = КонецДня(Период.ДатаОкончания);
	УстановитьНадписьКурсаНаПериод();
	ПостроитьГрафик();
КонецПроцедуры

&НаСервере
Процедура ПостроитьГрафикКурсов()
	Элементы.КурсыКриптоВалютГрафик.Видимость = Ложь;
	Возврат;
	
	КурсыКриптоВалютГрафик.Очистить();
	//КурсыКриптоВалютГрафик.ОбластьПостроения.ОриентацияМеток = ОриентацияПодписейДиаграммы.Вертикально;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КурсыКриптоВалют.ВалютаБазовая КАК ВалютаБазовая,
		|	КурсыКриптоВалют.ВалютаКотировки КАК ВалютаКотировки
		|ИЗ
		|	РегистрСведений.КурсыКриптоВалют КАК КурсыКриптоВалют
		|ГДЕ
		|	КурсыКриптоВалют.ВалютаКотировки = &ВалютаКотировки
		|	И КурсыКриптоВалют.Период >= &ДатаНачала
		|	И КурсыКриптоВалют.Период <= &ДатаКонца";
	
	Запрос.УстановитьПараметр("ВалютаКотировки",Справочники.Валюты.UnitedStatesDollar);
	Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",Период.ДатаОкончания);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокПар = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокПар.Добавить(Новый Структура("База,Котировка",ВыборкаДетальныеЗаписи.ВалютаБазовая,ВыборкаДетальныеЗаписи.ВалютаКотировки));
	КонецЦикла;
	МинимальныйКурс = 0;
	МаксимальныйКурс = 0;
	Если ОтображатьПередельныеЗначения Тогда
		СерияМинимум = КурсыКриптоВалютГрафик.УстановитьСерию("Минимум");
		СерияМинимум.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,1); 
		//СерияМинимум.ОтображатьГрафическоеПредставлениеДанныхВЛегендеДиаграммы = ОтображениеВЛегендеДиаграммы.НеОтображать;
		СерияМинимум.Маркер = ТипМаркераДиаграммы.Нет;
		
		СерияМаксимум = КурсыКриптоВалютГрафик.УстановитьСерию("Максимум"); 
		СерияМаксимум.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,1);
		//СерияМаксимум.ОтображатьГрафическоеПредставлениеДанныхВДиаграмме = ОтображениеВДиаграмме.НеОтображать;
		СерияМаксимум.Маркер = ТипМаркераДиаграммы.Нет;
	КонецЕсли;
	Для Каждого Пара Из СписокПар Цикл
		Серия = КурсыКриптоВалютГрафик.УстановитьСерию(Пара.База.Код + "/" + Пара.Котировка.Код);
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	КурсыКриптоВалют.Курс КАК Курс,
			|	КурсыКриптоВалют.Период КАК Период
			|ИЗ
			|	РегистрСведений.КурсыКриптоВалют КАК КурсыКриптоВалют
			|ГДЕ
			|	КурсыКриптоВалют.ВалютаБазовая = &ВалютаБазовая
			|	И КурсыКриптоВалют.ВалютаКотировки = &ВалютаКотировки
			|	И КурсыКриптоВалют.Период >= &ДатаНачала
			|	И КурсыКриптоВалют.Период <= &ДатаКонца
			|УПОРЯДОЧИТЬ ПО
			|	Период";
		
		Запрос.УстановитьПараметр("ВалютаБазовая", Пара.База);
		Запрос.УстановитьПараметр("ВалютаКотировки", Пара.Котировка);
		Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКонца",Период.ДатаОкончания);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		КоличествоЗаписей = ВыборкаДетальныеЗаписи.Количество();
		Если КоличествоЗаписей > КоличествоТочекГрафика Тогда
			Шаг = КоличествоЗаписей / КоличествоТочекГрафика
		Иначе
			Шаг = 1;
		КонецЕсли;
		
		Итерация = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Итерация = Итерация + 1;
			Курс = ВыборкаДетальныеЗаписи.Курс;
			Если Итерация = 1 Тогда
				МинимальныйКурс = Курс;
				МаксимальныйКурс = МинимальныйКурс;
			Иначе
				МинимальныйКурс = ?(Курс < МинимальныйКурс, Курс, МинимальныйКурс);
				МаксимальныйКурс = ?(Курс > МаксимальныйКурс, Курс, МаксимальныйКурс);
			КонецЕсли;                
			Если Итерация % Шаг < 1
				ИЛИ Итерация = 1
				ИЛИ Итерация = КоличествоЗаписей Тогда
				
				Точка = КурсыКриптоВалютГрафик.УстановитьТочку(Формат(ВыборкаДетальныеЗаписи.Период,"ДФ='dd.MM HH:mm'"));
				КурсыКриптоВалютГрафик.УстановитьЗначение(Точка,Серия,Курс,,Формат(Точка.Значение) + " - " + Курс);
			КонецЕсли;
		КонецЦикла;
		Если ОтображатьПередельныеЗначения Тогда
			Для Каждого Точка Из КурсыКриптоВалютГрафик.Точки Цикл
				КурсыКриптоВалютГрафик.УстановитьЗначение(Точка,СерияМинимум,МинимальныйКурс);
				КурсыКриптоВалютГрафик.УстановитьЗначение(Точка,СерияМаксимум,МаксимальныйКурс);
			КонецЦикла;
		КонецЕсли;
		КурсыКриптоВалютГрафик.АвтоМаксимальноеЗначение = Ложь;
		КурсыКриптоВалютГрафик.АвтоМинимальноеЗначение = Ложь;
		ДельтаМаксМин = МаксимальныйКурс - МинимальныйКурс;
		КурсыКриптоВалютГрафик.МаксимальноеЗначение = МаксимальныйКурс + ДельтаМаксМин/10;
		КурсыКриптоВалютГрафик.МинимальноеЗначение = МинимальныйКурс - ДельтаМаксМин/10;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПостроитьГрафикДоходности()
	ДоходностьГрафик.Очистить();
	ДоходностьГрафик.РежимСглаживания = РежимСглаживанияДиаграммы.ГладкаяКривая;
	ДоходностьГрафик.НатяжениеСглаживания = 100;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	КурсыКриптоВалют.ВалютаБазовая КАК ВалютаБазовая,
	//	|	КурсыКриптоВалют.ВалютаКотировки КАК ВалютаКотировки
	//	|ИЗ
	//	|	РегистрСведений.КурсыКриптоВалют КАК КурсыКриптоВалют
	//	|ГДЕ
	//	|	КурсыКриптоВалют.ВалютаКотировки = &ВалютаКотировки
	//	|	И КурсыКриптоВалют.Период >= &ДатаНачала
	//	|	И КурсыКриптоВалют.Период <= &ДатаКонца";
	//
	//Запрос.УстановитьПараметр("ВалютаКотировки",Справочники.Валюты.UnitedStatesDollar);
	//Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	//Запрос.УстановитьПараметр("ДатаКонца",Период.ДатаОкончания);
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//СписокПар = Новый Массив;
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	СписокПар.Добавить(Новый Структура("База,Котировка",ВыборкаДетальныеЗаписи.ВалютаБазовая,ВыборкаДетальныеЗаписи.ВалютаКотировки));
	//КонецЦикла;
	СписокПар = Новый Массив;
	СписокПар.Добавить(Новый Структура("База,Котировка",Справочники.Валюты.Ether,Справочники.Валюты.UnitedStatesDollar));
	МинимальноеНакопление = 0;
	МаксимальноеНакопление = 0;
	
	Для Каждого Пара Из СписокПар Цикл
		СерияКурса = ДоходностьГрафик.УстановитьСерию(Пара.База.Код + "/" + Пара.Котировка.Код);
		СерияКурса.Маркер = ТипМаркераДиаграммы.Ромб;
		СерияКурса.ИспользуемаяОсьЗначений = ИспользуемаяОсьЗначенийДиаграммы.Дополнительная;
		
		Если ОтображатьДоходностьБезУчетаИзмененияКурса Тогда
			СерияДоходаПоТекущемуКурсу = ДоходностьГрафик.УстановитьСерию(Пара.Котировка.Код + (" (доход)"));
			СерияДоходаПоТекущемуКурсу.Маркер = ТипМаркераДиаграммы.Круг;
			СерияДоходаПоТекущемуКурсу.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,1);
		Иначе
			СерияДохода = ДоходностьГрафик.УстановитьСерию(Пара.Котировка.Код + (" (доход)"));
			СерияДохода.Маркер = ТипМаркераДиаграммы.Круг;
			СерияДохода.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,1);
		КонецЕсли;
		
		СерияНакопления = ДоходностьГрафик.УстановитьСерию(Пара.Котировка.Код + (" (накопление)"));
		СерияНакопления.Маркер = ТипМаркераДиаграммы.Круг;
		СерияНакопления.ТипГрафическогоПредставления=ТипГрафическогоПредставленияСерииДиаграммы.ГрафикСОбластями;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Начисления.Сумма КАК Сумма,
			|	Начисления.Период КАК Период
			|ИЗ
			|	РегистрСведений.Начисления КАК Начисления
			|ГДЕ
			|	Начисления.Период >= &ДатаНачала
			|	И Начисления.Период <= &ДатаКонца
			|	И (&ОбщаяСтатистика
			|	ИЛИ Начисления.Кошелек = &Кошелек)
			|УПОРЯДОЧИТЬ ПО
			|	Период";
		
		//Запрос.УстановитьПараметр("ВалютаБазовая", Пара.База);
		//Запрос.УстановитьПараметр("ВалютаКотировки", Пара.Котировка);
		Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКонца",Период.ДатаОкончания);
		Запрос.УстановитьПараметр("ОбщаяСтатистика",СтатистикаПоВсемКошелькам);
		Запрос.УстановитьПараметр("Кошелек",Кошелек);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		КоличествоЗаписей = ВыборкаДетальныеЗаписи.Количество();
		Если КоличествоЗаписей > КоличествоТочекГрафика Тогда
			Шаг = КоличествоЗаписей / КоличествоТочекГрафика
		Иначе
			Шаг = 1;
		КонецЕсли;
		
		Итерация = 0;
		ПредыдущееНакоплениеUSD = 0;
		ПредыдущееНакоплениеETH = 0;
		ВыплаченноеНакоплениеETH = 0;
		ПредыдущееНакоплениеUSDПоТекущемуКурсу = 0;
		ДоходUSDЗаПериодИтоговая = 0;
		ДоходUSDПоТекущемуКурсуЗаПериодИтоговая = 0;
		ДоходETHЗаПериодИтоговая = 0;
		КурсНаНачало = 0;
		КурсНаКонец = 0;
		НакоплениеНаНачало = 0;
		НакоплениеНаКонец = 0;
		ИзменениеКурса = 0;
		ИзменениеКурсаЧисло = 0;
		ВлияниеКурса = 0;
		ВлияниеКурсаЧисло = 0;
		Курс = 0;
		МаксимальныйКурс = 0;
		МинимальныйКурс = 0;
		ПредыдущийПериод = Период.ДатаНачала;
		
		СрезТекущегоКурса = РегистрыСведений.КурсыКриптоВалют.СрезПоследних(ДатаКурса,Новый Структура("ВалютаБазовая,ВалютаКотировки",Справочники.Валюты.Ether,Справочники.Валюты.UnitedStatesDollar)); 
		Если СрезТекущегоКурса.Количество() = 0 Тогда
			ТекущийКурс = 0;
		Иначе
			ТекущийКурс = СрезТекущегоКурса[0].Курс;
		КонецЕсли;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Итерация = Итерация + 1;
			//Курс = ВыборкаДетальныеЗаписи.Курс;
			СрезКурса = РегистрыСведений.КурсыКриптоВалют.СрезПоследних(ВыборкаДетальныеЗаписи.Период,Новый Структура("ВалютаБазовая,ВалютаКотировки",Справочники.Валюты.Ether,Справочники.Валюты.UnitedStatesDollar));
			Если СрезКурса.Количество() = 0 Тогда	//Еще не заполнен курс
				КоличествоЗаписей = КоличествоЗаписей - 1;
				Если КоличествоЗаписей > КоличествоТочекГрафика Тогда
					Шаг = КоличествоЗаписей / КоличествоТочекГрафика
				Иначе
					Шаг = 1;
				КонецЕсли;
				Итерация = 0;
				Продолжить;
			КонецЕсли;
			Курс = СрезКурса[0].Курс;
			ВалютаБазовая = СрезКурса[0].ВалютаБазовая.Код;
			НакоплениеETH = ВыборкаДетальныеЗаписи.Сумма;
			
			//Проверка наличия выплаты за промежуток времени
			Если ВыплатыНеВлияютНаГрафик Тогда
				НакоплениеETH = НакоплениеETH + ВыплаченноеНакоплениеETH;
				ЗапросВыплат = Новый Запрос;
				ЗапросВыплат.Текст = 
					"ВЫБРАТЬ
					|	ВыплатыКриптовалютПулом.Сумма КАК Сумма
					|ИЗ
					|	РегистрНакопления.ВыплатыКриптовалютПулом КАК ВыплатыКриптовалютПулом
					|ГДЕ
					|	ВыплатыКриптовалютПулом.Timestamp МЕЖДУ &ДатаНачала И &ДатаОкончания
					|	И (&ОбщаяСтатистика
					|	ИЛИ ВыплатыКриптовалютПулом.Кошелек = &Кошелек)
					|	И ВыплатыКриптовалютПулом.Валюта = &Валюта
					|УПОРЯДОЧИТЬ ПО
					|	ВыплатыКриптовалютПулом.Timestamp";
				
				ЗапросВыплат.УстановитьПараметр("Валюта", СрезКурса[0].ВалютаБазовая);
				ЗапросВыплат.УстановитьПараметр("ДатаНачала", ПредыдущийПериод);
				ЗапросВыплат.УстановитьПараметр("ДатаОкончания", ВыборкаДетальныеЗаписи.Период);
				ЗапросВыплат.УстановитьПараметр("Кошелек", Кошелек);
				ЗапросВыплат.УстановитьПараметр("ОбщаяСтатистика", СтатистикаПоВсемКошелькам);
				
				РезультатЗапросаВыплат = ЗапросВыплат.Выполнить();
				
				ВыборкаВыплат = РезультатЗапросаВыплат.Выбрать();
				
				Пока ВыборкаВыплат.Следующий() Цикл
					ВыплаченноеНакоплениеETH = ВыплаченноеНакоплениеETH + ВыборкаВыплат.Сумма;
					НакоплениеETH = НакоплениеETH + ВыборкаВыплат.Сумма;
				КонецЦикла;
			КонецЕсли;
			
			НакоплениеUSD = Курс * НакоплениеETH;
			НакоплениеUSDПоТекущемуКурсу = ТекущийКурс * НакоплениеETH;
			Если Итерация = 1 Тогда
				МинимальноеНакопление = Мин(НакоплениеUSD, НакоплениеUSDПоТекущемуКурсу);
				МаксимальноеНакопление = Макс(НакоплениеUSD,НакоплениеUSDПоТекущемуКурсу);
				ПредыдущееНакоплениеUSD = НакоплениеUSD;
				ПредыдущееНакоплениеUSDПоТекущемуКурсу = НакоплениеUSDПоТекущемуКурсу;
				ПредыдущееНакоплениеETH = НакоплениеETH;
				
				МинимальныйКурс = Курс;
				МаксимальныйКурс = МинимальныйКурс;
				
				КурсНаНачало = Курс;
				НакоплениеНаНачало = НакоплениеETH;
			Иначе
				МинимальноеНакопление = Мин(НакоплениеUSD,НакоплениеUSDПоТекущемуКурсу,МинимальноеНакопление);
				МаксимальноеНакопление = Макс(НакоплениеUSD,НакоплениеUSDПоТекущемуКурсу,МаксимальноеНакопление);
				
				Если Итерация = КоличествоЗаписей Тогда
					КурсНаКонец = Курс;
					НакоплениеНаКонец = НакоплениеETH;
				КонецЕсли;
				
				МинимальныйКурс = ?(Курс < МинимальныйКурс, Курс, МинимальныйКурс);
				МаксимальныйКурс = ?(Курс > МаксимальныйКурс, Курс, МаксимальныйКурс);
			КонецЕсли;     
			           
			ДоходUSDЗаПериод = НакоплениеUSD - ПредыдущееНакоплениеUSD;
			ДоходUSDПоТекущемуКурсуЗаПериод = НакоплениеUSDПоТекущемуКурсу - ПредыдущееНакоплениеUSDПоТекущемуКурсу;
			ДоходETHЗаПериод = НакоплениеETH - ПредыдущееНакоплениеETH;
			ДоходUSDЗаПериодИтоговая = ДоходUSDЗаПериодИтоговая + ДоходUSDЗаПериод;
			ДоходUSDПоТекущемуКурсуЗаПериодИтоговая = ДоходUSDПоТекущемуКурсуЗаПериодИтоговая + ДоходUSDПоТекущемуКурсуЗаПериод;
			ДоходETHЗаПериодИтоговая = ДоходETHЗаПериодИтоговая + ДоходETHЗаПериод;           
		           
			Если Итерация % Шаг < 1
				ИЛИ Итерация = 1
				ИЛИ Итерация = КоличествоЗаписей Тогда
				
				Точка = ДоходностьГрафик.УстановитьТочку(Формат(ВыборкаДетальныеЗаписи.Период,"ДФ='dd.MM HH:mm'"));
				Подсказка = //Формат(Точка.Значение) + ":" + Символы.ПС
							СерияНакопления.Значение + ": " + Формат(НакоплениеUSD,"ЧДЦ=2") + Символы.ПС
							+ ВалютаБазовая + ": " + Формат(НакоплениеETH,"ЧДЦ=5") + Символы.ПС
							+ "1 " + Пара.База.Код + " = " + Формат(Курс,"ЧРГ=''''") + " " + Пара.Котировка.Код; 
				ДоходностьГрафик.УстановитьЗначение(Точка,СерияНакопления,Формат(НакоплениеUSD,"ЧДЦ=2"),,Подсказка);
				//ДоходностьГрафик.УстановитьЗначение(Точка,Серия,Число(Формат(Доходность,"ЧДЦ=2")));
				
				Если Итерация > 1 Тогда
					Расшифровка = Формат(ТекущийКурс,"ЧРГ=''''") + " " + Пара.Котировка.Код + " * " + Формат(НакоплениеETH,"ЧДЦ=5; ЧРГ=''''") + " " + Пара.База.Код + " - " + Формат(ПредыдущееНакоплениеUSDПоТекущемуКурсу,"ЧДЦ=2; ЧРГ=''''") + " " + Пара.Котировка.Код + Символы.ПС +
								  Формат(ТекущийКурс * НакоплениеETH, "ЧДЦ=2; ЧРГ=''''") + " " + Пара.Котировка.Код + " - " + Формат(ПредыдущееНакоплениеUSDПоТекущемуКурсу,"ЧДЦ=2; ЧРГ=''''") + " " + Пара.Котировка.Код;
				Иначе
					Расшифровка = Неопределено;
				КонецЕсли;
				
				Если ОтображатьДоходностьБезУчетаИзмененияКурса Тогда
					ДоходностьГрафик.УстановитьЗначение(Точка,СерияДоходаПоТекущемуКурсу,Формат(ДоходUSDПоТекущемуКурсуЗаПериод,"ЧДЦ=2; ЧРГ=''''"),Расшифровка);
				Иначе
					ДоходностьГрафик.УстановитьЗначение(Точка,СерияДохода,Формат(ДоходUSDЗаПериод,"ЧДЦ=2; ЧРГ=''''"));
				КонецЕсли;
				
				ДоходностьГрафик.УстановитьЗначение(Точка,СерияКурса,Курс);				
			КонецЕсли;
			
			ПредыдущееНакоплениеUSD = НакоплениеUSD;
			ПредыдущееНакоплениеUSDПоТекущемуКурсу = НакоплениеUSDПоТекущемуКурсу;
			ПредыдущееНакоплениеETH = НакоплениеETH;
			
			ПредыдущийПериод = ВыборкаДетальныеЗаписи.Период;
		КонецЦикла;
		ИзменениеКурсаЧисло = КурсНаКонец - КурсНаНачало;
		ИзменениеКурса = Формат(ИзменениеКурсаЧисло,"ЧДЦ=2; ЧРГ=''''; ЧН=-");
		ВлияниеКурсаЧисло = (НакоплениеНаКонец - НакоплениеНаНачало)* (КурсНаКонец - КурсНаНачало);
		ВлияниеКурса = Формат(ВлияниеКурсаЧисло,"ЧДЦ=2; ЧРГ=''''; ЧН=-");
		Если ИзменениеКурсаЧисло > 0 Тогда
			Элементы.ИзменениеКурса.ЦветТекста = WebЦвета.Зеленый;
			ИзменениеКурса = "+" + ИзменениеКурса;
		ИначеЕсли ИзменениеКурсаЧисло < 0 Тогда
			Элементы.ИзменениеКурса.ЦветТекста = WebЦвета.Красный;
		Иначе
			Элементы.ИзменениеКурса.ЦветТекста = WebЦвета.Черный;
		КонецЕсли;
		Если ВлияниеКурсаЧисло > 0 Тогда
			Элементы.ВлияниеКурса.ЦветТекста = WebЦвета.Зеленый;
			ВлияниеКурса = "+" + ВлияниеКурса;
		ИначеЕсли ВлияниеКурсаЧисло < 0 Тогда
			Элементы.ВлияниеКурса.ЦветТекста = WebЦвета.Красный;
		Иначе
			Элементы.ВлияниеКурса.ЦветТекста = WebЦвета.Черный;
		КонецЕсли;
		
		
		ДоходностьГрафик.АвтоМаксимальноеЗначение = Ложь;
		ДоходностьГрафик.АвтоМинимальноеЗначение = Ложь;
		ДельтаМаксМинДоходность = МаксимальноеНакопление - МинимальноеНакопление;
		ДоходностьГрафик.МаксимальноеЗначение = МаксимальноеНакопление + ДельтаМаксМинДоходность/10;
		ДоходностьГрафик.МинимальноеЗначение = МинимальноеНакопление - ДельтаМаксМинДоходность/10;
		
		ДельтаМаксМинКурс = ?(МаксимальныйКурс = Неопределено,0,МаксимальныйКурс) - ?(МинимальныйКурс = Неопределено,0,МинимальныйКурс);
		ДоходностьГрафик.ДополнительнаяОсьЗначений.СпособОпределенияМаксимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение;
		ДоходностьГрафик.ДополнительнаяОсьЗначений.СпособОпределенияМинимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение;
		ДоходностьГрафик.ДополнительнаяОсьЗначений.МаксимальноеЗначение = МаксимальныйКурс + ДельтаМаксМинКурс/10;
		ДоходностьГрафик.ДополнительнаяОсьЗначений.МинимальноеЗначение = МинимальныйКурс - ДельтаМаксМинКурс/10;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГрафики(Команда)
	ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДоходностьБезУчетаИзмененияКурсаПриИзменении(Элемент)
	УправлениеДоступностью();
	ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностью()
	Если ОтображатьДоходностьБезУчетаИзмененияКурса Тогда
		Элементы.ДатаКурса.Доступность = Истина;
	Иначе
		Элементы.ДатаКурса.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаКурсаПриИзменении(Элемент)
	УстановитьНадписьКурсаНаПериод();
	ПостроитьГрафик();
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьКурсаНаПериод()
	СрезКурса = РегистрыСведений.КурсыКриптоВалют.СрезПоследних(ДатаКурса,Новый Структура("ВалютаБазовая,ВалютаКотировки",Справочники.Валюты.Ether,Справочники.Валюты.UnitedStatesDollar));
	Если СрезКурса.Количество() = 0 Тогда
		Курс = 0;
	Иначе
		Курс = СрезКурса[0].Курс;
	КонецЕсли;
	
	ТекстКурс = "1 " + Справочники.Валюты.Ether.Код + " = " + Формат(Курс,"ЧРГ=''''") + " " + Справочники.Валюты.UnitedStatesDollar.Код;
	Элементы.НадписьКурсНаПериод.Заголовок = ТекстКурс;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоТочекГрафикаПриИзменении(Элемент)
	//ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПередельныеЗначенияПриИзменении(Элемент)
	ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВыплаты(Команда)
	ЗагрузитьВыплатыНаСервере(Кошелек);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьВыплатыНаСервере(Кошелек=Неопределено)
	ВзаимодействиеСEhtermine.ЗагрузитьВыплаты(Кошелек);
КонецПроцедуры

&НаКлиенте
Процедура ВыплатыНеВлияютНаГрафикПриИзменении(Элемент)
	УправлениеДоступностью();
	ПостроитьГрафик();
КонецПроцедуры

&НаКлиенте
Процедура СтатистикаПоВсемКошелькамПриИзменении(Элемент)
	УправлениеДоступностью();
	ПостроитьГрафик();
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьБаланс(Команда)
	ЗагрузитьБалансНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьБалансНаСервере()
	ВзаимодействиеСPolygon.ЗагрузитьБаланс();
КонецПроцедуры
